# Code generated by protoc-gen-gohttp. DO NOT EDIT.
# source: contract.proto
openapi: 3.0.3
info:
  title: tasks
  version: '1.0'
paths:
  /commands/createTask:
    post:
      tags:
        - public
        - tasks
      summary: create new task
      description: creates a new task
      requestBody:
        description: CreateTaskCommand
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskCommand'
        required: true
      responses:
        '200':
          description: TaskEvent
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/TaskEvent'
  /commands/deleteTask:
    post:
      tags:
        - private
        - tasks
      summary: delete task
      description: deletes an existing task
      requestBody:
        description: DeleteTaskCommand
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteTaskCommand'
        required: true
      responses:
        '200':
          description: TaskEvent
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/TaskEvent'
  /commands/updateTask:
    post:
      tags:
        - public
        - tasks
      summary: update task
      description: updates an existing task
      requestBody:
        description: UpdateTaskCommand
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskCommand'
        required: true
      responses:
        '200':
          description: TaskEvent
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/TaskEvent'
  /commands/progressTask:
    post:
      tags:
        - public
        - tasks
      summary: progress task
      description: update state of existing task to progress
      requestBody:
        description: ProgressTaskCommand
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgressTaskCommand'
        required: true
      responses:
        '200':
          description: TaskEvent
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/TaskEvent'
  /commands/completeTask:
    post:
      tags:
        - public
        - tasks
      summary: complete task
      description: update state of existing task to complete
      requestBody:
        description: CompleteTaskCommand
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTaskCommand'
        required: true
      responses:
        '200':
          description: TaskEvent
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/TaskEvent'
  /queries/listTasks:
    post:
      tags:
        - public
        - tasks
      summary: query tasks
      description: query all existing tasks
      requestBody:
        description: ListTasksQuery
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTasksQuery'
        required: true
      responses:
        '200':
          description: TaskEntity
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/TaskEntity'
  /queries/getQuote:
    post:
      tags:
        - public
        - quote
      summary: get quote
      description: get a random quote
      requestBody:
        description: GetQuoteQuery
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQuoteQuery'
        required: true
      responses:
        '200':
          description: QuoteData
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteData'
components:
  schemas:
    TaskEvent:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        sagaId:
          type: string
          example: sample
        stream:
          type: string
          example: sample
        streamId:
          type: string
          example: sample
        version:
          type: integer
          format: int64
          example: 1
        event:
          type: string
          example: sample
        eventTime:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        data:
          $ref: '#/components/schemas/TaskData'
    TaskData:
      type: object
      properties:
        title:
          type: string
          example: sample
        description:
          type: string
          example: sample
        status:
          type: string
          enum: [PENDING, PROGRESS, COMPLETED]
        randomMap:
          type: object
          additionalProperties:
            type: string
            example: sample
        metadata:
          type: object
    CreateTaskCommand:
      type: object
      properties:
        userContext:
          $ref: '#/components/schemas/UserContext'
        title:
          type: string
          example: sample
        description:
          type: string
          example: sample
    UserContext:
      type: object
      properties:
        userType:
          type: string
          example: sample
        id:
          type: string
          example: sample
        role:
          type: array
          items:
            type: string
            example: sample
        features:
          type: array
          items:
            type: string
            example: sample
    DeleteTaskCommand:
      type: object
      properties:
        userContext:
          $ref: '#/components/schemas/UserContext'
        id:
          type: string
          example: sample
    UpdateTaskCommand:
      type: object
      properties:
        userContext:
          $ref: '#/components/schemas/UserContext'
        id:
          type: string
          example: sample
        title:
          type: string
          example: sample
        description:
          type: string
          example: sample
    ProgressTaskCommand:
      type: object
      properties:
        userContext:
          $ref: '#/components/schemas/UserContext'
        id:
          type: string
          example: sample
    CompleteTaskCommand:
      type: object
      properties:
        userContext:
          $ref: '#/components/schemas/UserContext'
        id:
          type: string
          example: sample
    TaskEntity:
      type: object
      properties:
        id:
          type: string
          example: sample
        version:
          type: integer
          format: int64
          example: 1
        title:
          type: string
          example: sample
        description:
          type: string
          example: sample
        status:
          type: string
          enum: [PENDING, PROGRESS, COMPLETED]
        createdDateTime:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
        updatedDateTime:
          type: string
          format: date-time
          example: '2017-07-21T17:32:28Z'
    ListTasksQuery:
      type: object
      properties:
        userContext:
          $ref: '#/components/schemas/UserContext'
        pageNumber:
          type: integer
          format: int32
          example: 1
        countPerPage:
          type: integer
          format: int32
          example: 1
    QuoteData:
      type: object
      properties:
        quote:
          type: string
          example: sample
    GetQuoteQuery:
      type: object
      properties:
        userContext:
          $ref: '#/components/schemas/UserContext'
