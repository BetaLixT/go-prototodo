// [START declaration]
syntax = 'proto3';
package tasks;

import "contracts/models.proto";
import "custom/annotations.proto";

option go_package = "pkg/app/server/contracts";


// [START tasks domain]
service Tasks {

  // - Commands
  rpc Create(CreateTaskCommand) returns (TaskEvent) {
    option (custom.documentation) = {
      description: "creates a new task",
      summary: "create new task",
      tags: ["public", "tasks"]
    };
  };
  
  rpc Delete(DeleteTaskCommand) returns (TaskEvent) {
    option (custom.documentation) = {
      description: "deletes an existing task",
      summary: "delete task",
      tags: ["private", "tasks"]
    };
  };
  
  rpc Update(UpdateTaskCommand) returns (TaskEvent) {
    option (custom.documentation) = {
      description: "updates an existing task",
      summary: "update task",
      tags: ["public", "tasks"]
    };
  };
  
  // Update existing task state to progress
  rpc Progress(ProgressTaskCommand) returns (TaskEvent) {
    option (custom.documentation) = {
      description: "update state of existing task to progress",
      summary: "progress task",
      tags: ["public", "tasks"]
    };
  };
  
  // Update existing task to complete
  rpc Complete(CompleteTaskCommand) returns (TaskEvent) {
    option (custom.documentation) = {
      description: "update state of existing task to complete",
      summary: "complete task",
      tags: ["public", "tasks"]
    };
  };

  // Query for existing tasks
  rpc ListQuery(ListTasksQuery) returns (TaskEntityList) {
    option (custom.documentation) = {
      description: "query all existing tasks",
      summary: "query tasks",
      tags: ["public", "tasks"]
    };
  };
}
// [END tasks domain]

// [START quote domain]
service Quotes {
  
  // Get a quote
  rpc Get(GetQuoteQuery) returns (QuoteData) {
    option (custom.documentation) = {
      description: "get a random quote",
      summary: "get quote",
      tags: ["public", "quote"]
    };
  };
  rpc Create(CreateQuoteCommand) returns (QuoteData) {
    option (custom.documentation) = {
      description: "get a random quote",
      summary: "get quote",
      tags: ["public", "quote"]
    };
  };
}
// [END quote domain]
